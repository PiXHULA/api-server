openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: some great api...
  termsOfService: https://www.example.com
  contact:
    email: support@seb.se
    name: Support Team
    url: https://www.example.com/support
  license:
    name: License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000
    variables: {}
    description: local mock server
  - url: https://my-json-server.typicode.com/pixhula/api-server
    variables: {}
    description: my json server
paths:
  /users:
    summary: creates and returns users
    description: GET and POST users
    get:
      summary: fetches users
      description: returns users from server
      operationId: fetchUsers
      responses:
        '200':
          description: successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - Users
    post:
      summary: create a new user
      description: store user on server
      operationId: createUser
      requestBody: 
        required: true
        content: 
          application/json: 
            schema:
              $ref: '#/components/schemas/PostNewUser'
      responses:
        '201':
          description: successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
      tags:
        - Users
components:
  schemas:
    PostNewUser:
      type: object
      properties: 
        username:
          type: string
          example: john.doe@example.com
        age:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
    FullUser:
      allOf:
      - $ref: '#/components/schemas/PostNewUser'
      - type: object
        properties:
          id:
            type: string
            example: 6dba9a81-174c-4d9d-9b82-dd50126ed714
